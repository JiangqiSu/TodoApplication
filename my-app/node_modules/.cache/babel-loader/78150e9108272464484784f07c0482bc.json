{"ast":null,"code":"var _jsxFileName = \"/Users/jiangqisu/Desktop/spring_project/my-app/src/components/todo/ListTodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodoComponent extends Component {\n  //react lifecycle:\n  //1st constructor\n  //2nd render using initial state\n  //3rd componentDidMount\n  //4th render again\n  //5th componentWillUnmount\n  //shouldComponentUpdate if return false, render will happen at all\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [//moved to componentDidMount() so we don't have to wait for api to load\n        //{id: 1, description : 'Learn React', done: false, targetDate: new Date()},\n        //{id: 2, description : 'Become an expert at React', done: false, targetDate: new Date()},\n        //{id: 3, description : 'Do more React', done: false, targetDate: new Date()}\n      ]\n    };\n  } // wait for api\n\n\n  componentDidMount() {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      //console.log(response)\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Is Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.targetDate.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.done.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warming\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 45\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListTodoComponent;","map":{"version":3,"names":["React","Component","TodoDataService","AuthenticationService","ListTodoComponent","constructor","props","state","todos","componentDidMount","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","data","render","map","todo","description","targetDate","toString","done","id"],"sources":["/Users/jiangqisu/Desktop/spring_project/my-app/src/components/todo/ListTodoComponent.jsx"],"sourcesContent":["import React, {Component} from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass ListTodoComponent extends Component {\n    //react lifecycle:\n    //1st constructor\n    //2nd render using initial state\n    //3rd componentDidMount\n    //4th render again\n    //5th componentWillUnmount\n    //shouldComponentUpdate if return false, render will happen at all\n    constructor(props){\n        super(props)\n        this.state = {\n            todos : \n            [\n                //moved to componentDidMount() so we don't have to wait for api to load\n                //{id: 1, description : 'Learn React', done: false, targetDate: new Date()},\n                //{id: 2, description : 'Become an expert at React', done: false, targetDate: new Date()},\n                //{id: 3, description : 'Do more React', done: false, targetDate: new Date()}\n            ]\n        }\n    }\n\n    \n\n    // wait for api\n    componentDidMount() {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retrieveAllTodos(username)\n            .then(\n                response => {\n                    //console.log(response)\n                    this.setState({todos : response.data})\n                }\n            )\n    }\n\n    render () {\n        return (\n            <div>\n                <h1>List Todos</h1>\n                <div className='container'>\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Target Date</th>\n                                <th>Is Completed</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todos.map (\n                                    todo => \n                                        <tr key={todo.id}>\n                                            <td>{todo.description}</td>\n                                            <td>{todo.targetDate.toString()}</td>\n                                            <td>{todo.done.toString()}</td>\n                                            <td><button className=\"btn btn-warming\">Delete</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListTodoComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;;AAEA,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;EACtC;EACA;EACA;EACA;EACA;EACA;EACA;EACAI,WAAW,CAACC,KAAD,EAAO;IACd,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,KAAK,EACL,CACI;QACA;QACA;QACA;MAJJ;IAFS,CAAb;EASH,CAnBqC,CAuBtC;;;EACAC,iBAAiB,GAAG;IAChB,IAAIC,QAAQ,GAAGP,qBAAqB,CAACQ,mBAAtB,EAAf;IACAT,eAAe,CAACU,gBAAhB,CAAiCF,QAAjC,EACKG,IADL,CAEQC,QAAQ,IAAI;MACR;MACA,KAAKC,QAAL,CAAc;QAACP,KAAK,EAAGM,QAAQ,CAACE;MAAlB,CAAd;IACH,CALT;EAOH;;EAEDC,MAAM,GAAI;IACN,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,WAAf;QAAA,uBACI;UAAO,SAAS,EAAC,OAAjB;UAAA,wBACI;YAAA,uBACI;cAAA,wBACI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAGI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAHJ,eAII;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eASI;YAAA,UAEQ,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CACIC,IAAI,iBACA;cAAA,wBACI;gBAAA,UAAKA,IAAI,CAACC;cAAV;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAA,UAAKD,IAAI,CAACE,UAAL,CAAgBC,QAAhB;cAAL;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAGI;gBAAA,UAAKH,IAAI,CAACI,IAAL,CAAUD,QAAV;cAAL;gBAAA;gBAAA;gBAAA;cAAA,QAHJ,eAII;gBAAA,uBAAI;kBAAQ,SAAS,EAAC,iBAAlB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAJ;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA,GAASH,IAAI,CAACK,EAAd;cAAA;cAAA;cAAA;YAAA,QAFR;UAFR;YAAA;YAAA;YAAA;UAAA,QATJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EA8BH;;AAlEqC;;AAqE1C,eAAepB,iBAAf"},"metadata":{},"sourceType":"module"}