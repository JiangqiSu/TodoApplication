{"ast":null,"code":"var _jsxFileName = \"/Users/jiangqisu/Desktop/spring_project/my-app/src/components/todo/TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService';\nimport AuthenticationService from './AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.id === -1) {\n      return;\n    }\n\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveTodo(username, this.state.id).then(response => this.setState({\n      description: response.data.description,\n      targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n    }));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = 'Enter a Description';\n    } else if (values.description.length < 5) {\n      errors.description = 'Enter atleast 5 Characters in Description';\n    }\n\n    if (!moment(values.targetDate).isValid()) {\n      errors.targetDate = 'Enter a valid Target Date';\n    }\n\n    return errors;\n  }\n\n  onSubmit(values) {\n    let username = AuthenticationService.getLoggedInUserName();\n    let todo = {\n      id: this.state.id,\n      description: values.description,\n      targetDate: values.targetDate\n    };\n\n    if (this.state.id === -1) {\n      TodoDataService.createTodo(username, todo).then(() => this.props.navigate('/todos')); //REACT-6\n    } else {\n      TodoDataService.updateTodo(username, this.state.id, todo).then(() => this.props.navigate('/todos')); //REACT-6\n    }\n\n    console.log(values);\n  }\n\n  render() {\n    let {\n      description,\n      targetDate\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            description,\n            targetDate\n          },\n          onSubmit: this.onSubmit,\n          validateOnChange: false,\n          validateOnBlur: false,\n          validate: this.validate,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"targetDate\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"targetDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TodoComponent;","map":{"version":3,"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","TodoDataService","AuthenticationService","TodoComponent","constructor","props","state","id","params","description","targetDate","Date","format","onSubmit","bind","validate","componentDidMount","username","getLoggedInUserName","retrieveTodo","then","response","setState","data","values","errors","length","isValid","todo","createTodo","navigate","updateTodo","console","log","render"],"sources":["/Users/jiangqisu/Desktop/spring_project/my-app/src/components/todo/TodoComponent.jsx"],"sourcesContent":["import React, {Component} from 'react'\nimport moment from 'moment'\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\nimport TodoDataService from '../../api/todo/TodoDataService'\nimport AuthenticationService from './AuthenticationService'\n\nclass TodoComponent extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            id : this.props.params.id,\n            description : '',\n            targetDate : moment(new Date()).format('YYYY-MM-DD')\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.state.id === -1) {\n            return\n        }\n        let username = AuthenticationService.getLoggedInUserName()\n\n        TodoDataService.retrieveTodo(username, this.state.id)\n            .then(response => this.setState({\n                description: response.data.description,\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.description) {\n            errors.description = 'Enter a Description'\n        } else if (values.description.length < 5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n\n        if (!moment(values.targetDate).isValid()) {\n            errors.targetDate = 'Enter a valid Target Date'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let username = AuthenticationService.getLoggedInUserName()\n        let todo = {\n            id: this.state.id,\n            description: values.description,\n            targetDate: values.targetDate\n        }\n        if (this.state.id === -1) {\n            TodoDataService.createTodo(username, todo)\n                .then(() => this.props.navigate('/todos')) //REACT-6\n        } else {\n            TodoDataService.updateTodo(username, this.state.id, todo)\n                .then(() => this.props.navigate('/todos'))//REACT-6\n        }\n        console.log(values);\n    }\n\n    render() {\n        let {description, targetDate} = this.state\n        return (\n            <div>\n                <h1>Todo</h1>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ description, targetDate }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <ErrorMessage name=\"targetDate\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TodoComponent"],"mappings":"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"},"metadata":{},"sourceType":"module"}