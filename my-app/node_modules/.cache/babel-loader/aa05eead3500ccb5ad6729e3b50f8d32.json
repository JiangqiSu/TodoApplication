{"ast":null,"code":"var _jsxFileName = \"/Users/jiangqisu/Desktop/spring_project/my-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from \"react\";\nimport './Counter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  //define the initial state in a constructor\n  //state => counter = 0\n  constructor() {\n    super(); //need to call it super before using it\n\n    this.render = () => {\n      //auto bind\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.increment,\n          children: \"+1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"count\",\n          children: this.state.counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    };\n\n    this.increment = () => {\n      console.log('increment called');\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.state = {\n      counter: 0\n    }; //bind method\n    //The bind() method allows an object to borrow a method \n    //from another object without making a copy of that method.\n    //this.increment = this.increment.bind(this);\n  } // DOM in js, document, object, model, very complex and slow\n  // Virtual dom from react, faster (only update what changed instead of all)\n  //render(){\n\n\n}\n\nexport default Counter;","map":{"version":3,"names":["React","Component","Counter","constructor","render","increment","state","counter","console","log","setState"],"sources":["/Users/jiangqisu/Desktop/spring_project/my-app/src/components/counter/Counter.jsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport './Counter.css';\n\nclass Counter extends Component{\n\n    //define the initial state in a constructor\n    //state => counter = 0\n\n    constructor() {\n        super(); //need to call it super before using it\n        this.state = {\n            counter : 0,\n        }\n\n        //bind method\n        //The bind() method allows an object to borrow a method \n        //from another object without making a copy of that method.\n        //this.increment = this.increment.bind(this);\n    }\n\n    // DOM in js, document, object, model, very complex and slow\n    // Virtual dom from react, faster (only update what changed instead of all)\n    //render(){\n    render = () => { //auto bind\n    return(\n        <div className=\"Counter\">\n        <button onClick = {this.increment}>+1</button>\n        <span className=\"count\">{this.state.counter}</span>\n        </div>\n        )\n    }\n\n    increment = () => {\n        console.log('increment called');\n        this.setState(\n            {\n                counter : this.state.counter + 1,\n            }\n        );\n    }\n}\n\nexport default Counter;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;EAE3B;EACA;EAEAE,WAAW,GAAG;IACV,QADU,CACD;;IADC,KAedC,MAfc,GAeL,MAAM;MAAE;MACjB,oBACI;QAAK,SAAS,EAAC,SAAf;QAAA,wBACA;UAAQ,OAAO,EAAI,KAAKC,SAAxB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAM,SAAS,EAAC,OAAhB;UAAA,UAAyB,KAAKC,KAAL,CAAWC;QAApC;UAAA;UAAA;UAAA;QAAA,QAFA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAMC,CAtBa;;IAAA,KAwBdF,SAxBc,GAwBF,MAAM;MACdG,OAAO,CAACC,GAAR,CAAY,kBAAZ;MACA,KAAKC,QAAL,CACI;QACIH,OAAO,EAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB;MADnC,CADJ;IAKH,CA/Ba;;IAEV,KAAKD,KAAL,GAAa;MACTC,OAAO,EAAG;IADD,CAAb,CAFU,CAMV;IACA;IACA;IACA;EACH,CAf0B,CAiB3B;EACA;EACA;;;AAnB2B;;AAuC/B,eAAeL,OAAf"},"metadata":{},"sourceType":"module"}