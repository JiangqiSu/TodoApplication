{"ast":null,"code":"var _jsxFileName = \"/Users/jiangqisu/Desktop/spring_project/my-app/src/components/todo/TodoApp.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoApp\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LoginComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LoginComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/welcome\",\n            element: /*#__PURE__*/_jsxDEV(WelcomeComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass WelcomeComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'userName',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    //console.log(event.target.value);\n    //this.setState({username:event.target.value})\n    //event.target.name is a variable, left side tends to be a constant, so use []\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    //admin, 123456\n    if (this.state.username === 'admin' && this.state.password === '123456') {\n      this.setState({\n        showSuccessMessage: true\n      });\n      this.setState({\n        hasLoginFailed: false\n      });\n    } else {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Invalid Credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 47\n      }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Login Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 51\n      }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 28\n      }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.loginClicked,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction ShowInvalidCredentials(props) {\n  if (props.hasLoginFailed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Invalid Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this);\n  }\n\n  return null;\n}\n\n_c = ShowInvalidCredentials;\n\nfunction ShowLoginSuccessMessage(props) {\n  if (props.showSuccessMessage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Logined Successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  }\n\n  return null;\n}\n\n_c2 = ShowLoginSuccessMessage;\nexport default TodoApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowInvalidCredentials\");\n$RefreshReg$(_c2, \"ShowLoginSuccessMessage\");","map":{"version":3,"names":["React","Component","BrowserRouter","Router","Route","Routes","TodoApp","render","WelcomeComponent","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","ShowInvalidCredentials","ShowLoginSuccessMessage"],"sources":["/Users/jiangqisu/Desktop/spring_project/my-app/src/components/todo/TodoApp.jsx"],"sourcesContent":["import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom'\n\nclass TodoApp extends Component {\n    render() {\n        return (\n            <div className = \"TodoApp\">\n                <Router>\n                    <Routes>\n                        <Route path = \"/\" element={<LoginComponent/>}/>\n                        <Route path = \"/login\" element = {<LoginComponent/>}/>\n                        <Route path = \"/welcome\" element = {<WelcomeComponent/>}/>  \n                    </Routes>\n                </Router>\n                {/*<LoginComponent/>\n                <WelcomeComponent/>*/}\n            </div>\n        )\n    }\n}\n\nclass WelcomeComponent extends Component {\n    render() {\n        return <div>Welcome</div>\n    }\n}\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: 'userName',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        //console.log(event.target.value);\n        //this.setState({username:event.target.value})\n        //event.target.name is a variable, left side tends to be a constant, so use []\n        this.setState({[event.target.name]:event.target.value})\n    }\n\n    loginClicked(){\n        //admin, 123456\n        if(this.state.username === 'admin' && this.state.password==='123456'){\n            this.setState({showSuccessMessage:true})\n            this.setState({hasLoginFailed:false})\n        }\n        else{\n            this.setState({showSuccessMessage:false})\n            this.setState({hasLoginFailed:true})\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n\n                {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\n                {this.state.showSuccessMessage && <div>Login Successfully</div>}\n                User Name: <input type = \"text\" name = \"username\" value = {this.state.username} onChange = {this.handleChange}/>\n                Password: <input type = \"password\" name = \"password\" value = {this.state.password} onChange = {this.handleChange}/>\n                <button onClick={this.loginClicked}>Login</button>\n            </div>\n        )\n    }\n}\n\nfunction ShowInvalidCredentials(props) {\n    if(props.hasLoginFailed) {\n        return <div>Invalid Credentials</div>\n    }\n    return null\n}\n\nfunction ShowLoginSuccessMessage(props) {\n    if(props.showSuccessMessage) {\n        return <div>Logined Successfully</div>\n    }\n    return null\n}\n\nexport default TodoApp"],"mappings":"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"},"metadata":{},"sourceType":"module"}