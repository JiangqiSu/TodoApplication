{"ast":null,"code":"var _jsxFileName = \"/Users/jiangqisu/Desktop/spring_project/my-app/src/components/todo/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'userName',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    //console.log(event.target.value);\n    //this.setState({username:event.target.value})\n    //event.target.name is a variable, left side tends to be a constant, so use []\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(() => {\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.navigate(`/welcome/${this.state.username}`);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \"Invalid Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 51\n        }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Login Successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 55\n        }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 32\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","executeBasicAuthenticationService","then","registerSuccessfulLogin","navigate","catch","render"],"sources":["/Users/jiangqisu/Desktop/spring_project/my-app/src/components/todo/LoginComponent.jsx"],"sourcesContent":["import React, {Component} from 'react'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: 'userName',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        //console.log(event.target.value);\n        //this.setState({username:event.target.value})\n        //event.target.name is a variable, left side tends to be a constant, so use []\n        this.setState({[event.target.name]:event.target.value})\n    }\n\n    loginClicked(){    \n        AuthenticationService\n        .executeBasicAuthenticationService(this.state.username, this.state.password)\n        .then(() => {\n            AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n            this.props.navigate(`/welcome/${this.state.username}`)\n        }).catch(() => {\n            this.setState({showSuccessMessage:false})\n            this.setState({hasLoginFailed:true})\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Successfully</div>}\n                    User Name: <input type = \"text\" name = \"username\" value = {this.state.username} onChange = {this.handleChange}/>\n                    Password: <input type = \"password\" name = \"password\" value = {this.state.password} onChange = {this.handleChange}/>\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;EACnCG,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,QAAQ,EAAE,UADD;MAETC,QAAQ,EAAE,EAFD;MAGTC,cAAc,EAAE,KAHP;MAITC,kBAAkB,EAAE;IAJX,CAAb;IAMA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;IACA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;EACH;;EAEDD,YAAY,CAACG,KAAD,EAAQ;IAChB;IACA;IACA;IACA,KAAKC,QAAL,CAAc;MAAC,CAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAoBH,KAAK,CAACE,MAAN,CAAaE;IAAlC,CAAd;EACH;;EAEDL,YAAY,GAAE;IACVX,qBAAqB,CACpBiB,iCADD,CACmC,KAAKb,KAAL,CAAWC,QAD9C,EACwD,KAAKD,KAAL,CAAWE,QADnE,EAECY,IAFD,CAEM,MAAM;MACRlB,qBAAqB,CAACmB,uBAAtB,CAA8C,KAAKf,KAAL,CAAWC,QAAzD,EAAmE,KAAKD,KAAL,CAAWE,QAA9E;MACA,KAAKH,KAAL,CAAWiB,QAAX,CAAqB,YAAW,KAAKhB,KAAL,CAAWC,QAAS,EAApD;IACH,CALD,EAKGgB,KALH,CAKS,MAAM;MACX,KAAKR,QAAL,CAAc;QAACL,kBAAkB,EAAC;MAApB,CAAd;MACA,KAAKK,QAAL,CAAc;QAACN,cAAc,EAAC;MAAhB,CAAd;IACH,CARD;EASH;;EAEDe,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,WAAf;QAAA,WAIK,KAAKlB,KAAL,CAAWG,cAAX,iBAA6B;UAAK,SAAS,EAAC,qBAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJlC,EAKK,KAAKH,KAAL,CAAWI,kBAAX,iBAAiC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALtC,8BAMe;UAAO,IAAI,EAAG,MAAd;UAAqB,IAAI,EAAG,UAA5B;UAAuC,KAAK,EAAI,KAAKJ,KAAL,CAAWC,QAA3D;UAAqE,QAAQ,EAAI,KAAKI;QAAtF;UAAA;UAAA;UAAA;QAAA,QANf,6BAOc;UAAO,IAAI,EAAG,UAAd;UAAyB,IAAI,EAAG,UAAhC;UAA2C,KAAK,EAAI,KAAKL,KAAL,CAAWE,QAA/D;UAAyE,QAAQ,EAAI,KAAKG;QAA1F;UAAA;UAAA;UAAA;QAAA,QAPd,eAQI;UAAQ,SAAS,EAAC,iBAAlB;UAAoC,OAAO,EAAE,KAAKE,YAAlD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAeH;;AAhDkC;;AAmDvC,eAAeV,cAAf"},"metadata":{},"sourceType":"module"}