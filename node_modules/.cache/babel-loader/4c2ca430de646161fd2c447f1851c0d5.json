{"ast":null,"code":"var _jsxFileName = \"/Users/jiangqisu/Desktop/spring_project/my-app/src/components/todo/ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodoComponent extends Component {\n  //react lifecycle:\n  //1st constructor\n  //2nd render using initial state\n  //3rd componentDidMount\n  //4th render again\n  //5th componentWillUnmount\n  //shouldComponentUpdate if return false, render will happen at all\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [//moved to componentDidMount() so we don't have to wait for api to load\n        //{id: 1, description : 'Learn React', done: false, targetDate: new Date()},\n        //{id: 2, description : 'Become an expert at React', done: false, targetDate: new Date()},\n        //{id: 3, description : 'Do more React', done: false, targetDate: new Date()}\n      ],\n      message: null\n    };\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.refreshTodos = this.refreshTodos.bind(this);\n  } // wait for api\n\n\n  componentDidMount() {\n    this.refreshTodos();\n  }\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      //console.log(response)\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  deleteTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.deleteTodo(username, id).then(response => {\n      this.setState({\n        message: `Delete of todo ${id} successful`\n      });\n      this.refreshTodos();\n    });\n  }\n\n  updateTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.deleteTodo(username, id).then(response => {\n      this.setState({\n        message: `Delete of todo ${id} successful`\n      });\n      this.refreshTodos();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Is Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.targetDate.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.done.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: () => this.updateTodoClicked(todo.id),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  onClick: () => this.deleteTodoClicked(todo.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListTodoComponent;","map":{"version":3,"names":["React","Component","TodoDataService","AuthenticationService","ListTodoComponent","constructor","props","state","todos","message","deleteTodoClicked","bind","updateTodoClicked","refreshTodos","componentDidMount","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","data","id","deleteTodo","render","map","todo","description","targetDate","toString","done"],"sources":["/Users/jiangqisu/Desktop/spring_project/my-app/src/components/todo/ListTodosComponent.jsx"],"sourcesContent":["import React, {Component} from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass ListTodoComponent extends Component {\n    //react lifecycle:\n    //1st constructor\n    //2nd render using initial state\n    //3rd componentDidMount\n    //4th render again\n    //5th componentWillUnmount\n    //shouldComponentUpdate if return false, render will happen at all\n    constructor(props){\n        super(props)\n        this.state = {\n            todos : \n            [\n                //moved to componentDidMount() so we don't have to wait for api to load\n                //{id: 1, description : 'Learn React', done: false, targetDate: new Date()},\n                //{id: 2, description : 'Become an expert at React', done: false, targetDate: new Date()},\n                //{id: 3, description : 'Do more React', done: false, targetDate: new Date()}\n            ],\n            message : null\n        }\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\n        this.refreshTodos = this.refreshTodos.bind(this)\n    }\n\n    \n\n    // wait for api\n    componentDidMount() {\n        this.refreshTodos();\n    }\n\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retrieveAllTodos(username)\n        .then(\n            response => {\n                //console.log(response)\n                this.setState({todos : response.data})\n            }\n        )\n    }\n\n    deleteTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.deleteTodo(username, id)\n            .then(\n                response => {\n                    this.setState({message : `Delete of todo ${id} successful`});\n                    this.refreshTodos()\n                }\n            )\n    }    \n    \n    updateTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.deleteTodo(username, id)\n            .then(\n                response => {\n                    this.setState({message : `Delete of todo ${id} successful`});\n                    this.refreshTodos()\n                }\n            )\n    }\n\n    render () {\n        return (\n            <div>\n                <h1>List Todos</h1>\n                {this.state.message && <div className='alert alert-success'>{this.state.message}</div>}\n                <div className='container'>\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Target Date</th>\n                                <th>Is Completed</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todos.map (\n                                    todo => \n                                        <tr key={todo.id}>\n                                            <td>{todo.description}</td>\n                                            <td>{todo.targetDate.toString()}</td>\n                                            <td>{todo.done.toString()}</td>\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListTodoComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;;AAEA,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;EACtC;EACA;EACA;EACA;EACA;EACA;EACA;EACAI,WAAW,CAACC,KAAD,EAAO;IACd,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,KAAK,EACL,CACI;QACA;QACA;QACA;MAJJ,CAFS;MAQTC,OAAO,EAAG;IARD,CAAb;IAUA,KAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;IACA,KAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;IACA,KAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;EACH,CAvBqC,CA2BtC;;;EACAG,iBAAiB,GAAG;IAChB,KAAKD,YAAL;EACH;;EAEDA,YAAY,GAAG;IACX,IAAIE,QAAQ,GAAGZ,qBAAqB,CAACa,mBAAtB,EAAf;IACAd,eAAe,CAACe,gBAAhB,CAAiCF,QAAjC,EACCG,IADD,CAEIC,QAAQ,IAAI;MACR;MACA,KAAKC,QAAL,CAAc;QAACZ,KAAK,EAAGW,QAAQ,CAACE;MAAlB,CAAd;IACH,CALL;EAOH;;EAEDX,iBAAiB,CAACY,EAAD,EAAK;IAClB,IAAIP,QAAQ,GAAGZ,qBAAqB,CAACa,mBAAtB,EAAf;IACAd,eAAe,CAACqB,UAAhB,CAA2BR,QAA3B,EAAqCO,EAArC,EACKJ,IADL,CAEQC,QAAQ,IAAI;MACR,KAAKC,QAAL,CAAc;QAACX,OAAO,EAAI,kBAAiBa,EAAG;MAAhC,CAAd;MACA,KAAKT,YAAL;IACH,CALT;EAOH;;EAEDD,iBAAiB,CAACU,EAAD,EAAK;IAClB,IAAIP,QAAQ,GAAGZ,qBAAqB,CAACa,mBAAtB,EAAf;IACAd,eAAe,CAACqB,UAAhB,CAA2BR,QAA3B,EAAqCO,EAArC,EACKJ,IADL,CAEQC,QAAQ,IAAI;MACR,KAAKC,QAAL,CAAc;QAACX,OAAO,EAAI,kBAAiBa,EAAG;MAAhC,CAAd;MACA,KAAKT,YAAL;IACH,CALT;EAOH;;EAEDW,MAAM,GAAI;IACN,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEK,KAAKjB,KAAL,CAAWE,OAAX,iBAAsB;QAAK,SAAS,EAAC,qBAAf;QAAA,UAAsC,KAAKF,KAAL,CAAWE;MAAjD;QAAA;QAAA;QAAA;MAAA,QAF3B,eAGI;QAAK,SAAS,EAAC,WAAf;QAAA,uBACI;UAAO,SAAS,EAAC,OAAjB;UAAA,wBACI;YAAA,uBACI;cAAA,wBACI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAGI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAHJ,eAII;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAJJ,eAKI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QALJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAUI;YAAA,UAEQ,KAAKF,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CACIC,IAAI,iBACA;cAAA,wBACI;gBAAA,UAAKA,IAAI,CAACC;cAAV;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAA,UAAKD,IAAI,CAACE,UAAL,CAAgBC,QAAhB;cAAL;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAGI;gBAAA,UAAKH,IAAI,CAACI,IAAL,CAAUD,QAAV;cAAL;gBAAA;gBAAA;gBAAA;cAAA,QAHJ,eAII;gBAAA,uBAAI;kBAAQ,SAAS,EAAC,iBAAlB;kBAAoC,OAAO,EAAE,MAAM,KAAKjB,iBAAL,CAAuBc,IAAI,CAACJ,EAA5B,CAAnD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAJ;gBAAA;gBAAA;gBAAA;cAAA,QAJJ,eAKI;gBAAA,uBAAI;kBAAQ,SAAS,EAAC,iBAAlB;kBAAoC,OAAO,EAAE,MAAM,KAAKZ,iBAAL,CAAuBgB,IAAI,CAACJ,EAA5B,CAAnD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAJ;gBAAA;gBAAA;gBAAA;cAAA,QALJ;YAAA,GAASI,IAAI,CAACJ,EAAd;cAAA;cAAA;cAAA;YAAA,QAFR;UAFR;YAAA;YAAA;YAAA;UAAA,QAVJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAiCH;;AAnGqC;;AAsG1C,eAAelB,iBAAf"},"metadata":{},"sourceType":"module"}