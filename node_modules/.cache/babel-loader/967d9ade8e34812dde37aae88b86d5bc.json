{"ast":null,"code":"var _jsxFileName = \"/Users/jiangqisu/Desktop/spring_project/my-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport './Counter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0\n    };\n    this.increment = this.increment.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [\"Counter\", /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 1,\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 5,\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 10,\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\",\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this);\n  }\n\n  increment(by) {\n    this.setState({\n      counter: this.state.counter + by\n    });\n  }\n\n}\n\nclass CounterButton extends Component {\n  //define the initial state in a constructor\n  //state => counter = 0\n  constructor() {\n    super(); //need to call it super before using it\n\n    this.state = {\n      counter: 0\n    }; //bind method\n    //The bind() method allows an object to borrow a method \n    //from another object without making a copy of that method.\n\n    this.increment = this.increment.bind(this);\n  } // DOM in js, document, object, model, very complex and slow\n  // Virtual dom from react, faster (only update what changed instead of all)\n\n\n  render() {\n    //let styple = \n    const myStyle = {\n      fontSize: \"50px\",\n      padding: \"10px 20px\"\n    }; //render = () => { //auto bind\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: [\"+\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\",\n        style: myStyle,\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n  increment() {\n    //increment = () => {\n    console.log('increment called'); //setState: merge with existing state\n\n    this.setState({\n      counter: this.state.counter + this.props.by\n    });\n    this.props.incrementMethod(this.props.by);\n  }\n\n} // set default value for prop\n\n\nCounterButton.defaultProps = {\n  by: 1\n}; // check prop types\n\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"names":["React","Component","PropTypes","Counter","constructor","state","counter","increment","bind","render","by","setState","CounterButton","myStyle","fontSize","padding","props","console","log","incrementMethod","defaultProps","propTypes","number"],"sources":["/Users/jiangqisu/Desktop/spring_project/my-app/src/components/counter/Counter.jsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport './Counter.css';\n\n\nclass Counter extends Component{\n\n    constructor() {\n        super();\n\n        this.state = {\n            counter : 0\n        }\n\n        this.increment = this.increment.bind(this);\n    }\n\n    render() {\n        return (\n          <div className=\"counter\">\n            Counter\n            <CounterButton by = {1} incrementMethod = {this.increment}/>\n            <CounterButton by = {5} incrementMethod = {this.increment}/>\n            <CounterButton by = {10} incrementMethod = {this.increment}/>\n            <span className=\"count\">{this.state.counter}</span>\n          </div>\n        );\n    }\n\n    increment(by) {\n        this.setState(\n            {\n                counter: this.state.counter + by\n            }\n        );\n    }\n}\n\nclass CounterButton extends Component{\n\n    //define the initial state in a constructor\n    //state => counter = 0\n\n    constructor() {\n        super(); //need to call it super before using it\n        this.state = {\n            counter : 0\n        }\n\n        //bind method\n        //The bind() method allows an object to borrow a method \n        //from another object without making a copy of that method.\n        this.increment = this.increment.bind(this);\n    }\n\n    // DOM in js, document, object, model, very complex and slow\n    // Virtual dom from react, faster (only update what changed instead of all)\n    render(){\n        //let styple = \n        const myStyle = {fontSize : \"50px\", padding : \"10px 20px\"};\n    //render = () => { //auto bind\n        return(\n            <div className=\"Counter\">\n            <button onClick = {this.increment}>+{this.props.by}</button>\n            <span className=\"count\"\n            style = {myStyle}\n            >{this.state.counter}</span>\n            </div>\n            )\n    }\n    increment(){\n    //increment = () => {\n        console.log('increment called');\n        //setState: merge with existing state\n        this.setState(\n            {\n                counter : this.state.counter + this.props.by,\n            }\n        );\n\n        this.props.incrementMethod(this.props.by);\n    }\n}\n\n// set default value for prop\nCounterButton.defaultProps = {\n    by : 1\n}\n\n// check prop types\nCounterButton.propTypes = {\n    by : PropTypes.number\n}\n\nexport default Counter;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;;;AAGA,MAAMC,OAAN,SAAsBF,SAAtB,CAA+B;EAE3BG,WAAW,GAAG;IACV;IAEA,KAAKC,KAAL,GAAa;MACTC,OAAO,EAAG;IADD,CAAb;IAIA,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;EACH;;EAEDC,MAAM,GAAG;IACL,oBACE;MAAK,SAAS,EAAC,SAAf;MAAA,mCAEE,QAAC,aAAD;QAAe,EAAE,EAAI,CAArB;QAAwB,eAAe,EAAI,KAAKF;MAAhD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,aAAD;QAAe,EAAE,EAAI,CAArB;QAAwB,eAAe,EAAI,KAAKA;MAAhD;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,aAAD;QAAe,EAAE,EAAI,EAArB;QAAyB,eAAe,EAAI,KAAKA;MAAjD;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAM,SAAS,EAAC,OAAhB;QAAA,UAAyB,KAAKF,KAAL,CAAWC;MAApC;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EASH;;EAEDC,SAAS,CAACG,EAAD,EAAK;IACV,KAAKC,QAAL,CACI;MACIL,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqBI;IADlC,CADJ;EAKH;;AA9B0B;;AAiC/B,MAAME,aAAN,SAA4BX,SAA5B,CAAqC;EAEjC;EACA;EAEAG,WAAW,GAAG;IACV,QADU,CACD;;IACT,KAAKC,KAAL,GAAa;MACTC,OAAO,EAAG;IADD,CAAb,CAFU,CAMV;IACA;IACA;;IACA,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;EACH,CAfgC,CAiBjC;EACA;;;EACAC,MAAM,GAAE;IACJ;IACA,MAAMI,OAAO,GAAG;MAACC,QAAQ,EAAG,MAAZ;MAAoBC,OAAO,EAAG;IAA9B,CAAhB,CAFI,CAGR;;IACI,oBACI;MAAK,SAAS,EAAC,SAAf;MAAA,wBACA;QAAQ,OAAO,EAAI,KAAKR,SAAxB;QAAA,gBAAqC,KAAKS,KAAL,CAAWN,EAAhD;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAM,SAAS,EAAC,OAAhB;QACA,KAAK,EAAIG,OADT;QAAA,UAEE,KAAKR,KAAL,CAAWC;MAFb;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAQH;;EACDC,SAAS,GAAE;IACX;IACIU,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAFO,CAGP;;IACA,KAAKP,QAAL,CACI;MACIL,OAAO,EAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,KAAKU,KAAL,CAAWN;IAD9C,CADJ;IAMA,KAAKM,KAAL,CAAWG,eAAX,CAA2B,KAAKH,KAAL,CAAWN,EAAtC;EACH;;AA3CgC,C,CA8CrC;;;AACAE,aAAa,CAACQ,YAAd,GAA6B;EACzBV,EAAE,EAAG;AADoB,CAA7B,C,CAIA;;AACAE,aAAa,CAACS,SAAd,GAA0B;EACtBX,EAAE,EAAGR,SAAS,CAACoB;AADO,CAA1B;AAIA,eAAenB,OAAf"},"metadata":{},"sourceType":"module"}